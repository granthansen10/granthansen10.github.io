[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "My name is Grant Hansen. I am a junior broadcasting and sports media major at the University of Nebraska-Lincoln. I cover Husker baseball with HuskerOnline as a part of the On3 network of fan sites. I also am the play-by-play voice of the Midland Warriors in basketball and football. On this website, you can find my data journalism work."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Hansen’s Data Dive",
    "section": "",
    "text": "code\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nMay 7, 2024\n\n\nGrant Hansen\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nhuskers\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nApr 4, 2024\n\n\nGrant Hansen\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nhuskers\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nDec 5, 2022\n\n\nGrant Hansen\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nhuskers\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nNov 7, 2022\n\n\nGrant Hansen\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/attempting-to-predict-my-2024-NCAA-bracket-using-code-and-ai/index.html",
    "href": "posts/attempting-to-predict-my-2024-NCAA-bracket-using-code-and-ai/index.html",
    "title": "Attempting to predict my 2024 NCAA bracket using code and AI",
    "section": "",
    "text": "But, perhaps doing it with a somewhat flawed computer model is.\nThat’s what I, eight others in my class and my professor did this semester. Through the use of machine learning, R code and roughly 10 years of college basketball games, we predicted the entire NCAA Tournament using a variety of different predictive models. My bracket finished third of 11 different entries and 10 points shy of second place with a scoring total of 1,050.\n\n\nCode\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(hoopR)\nlibrary(zoo)\nlibrary(gt)\nlibrary(bonsai)\nlibrary(gt)\nset.seed(1234)\n\ngames <- load_mbb_team_box(seasons = 2015:2024) |> filter(game_date < as.Date(\"2024-03-18\"))\n\nnond1 <- games |> group_by(team_id, season) |> tally() |> filter(n < 10) |> select(team_id)\nnond1 <- pull(nond1)\n\ndf <- games |> filter(!team_id %in% nond1 & !opponent_team_id %in% nond1)\n\nteamside <- df |> \n  group_by(team_id, season) |> \n  arrange(game_date) |> \n  mutate(\n    team_possessions = field_goals_attempted - offensive_rebounds + turnovers + (.475 * free_throws_attempted),\n    team_points_per_possession = team_score/team_possessions,\n    team_defensive_points_per_possession = opponent_team_score/team_possessions,\n    team_offensive_efficiency = team_points_per_possession * 100,\n    team_defensive_efficiency = team_defensive_points_per_possession * 100,\n    team_season_offensive_efficiency = lag(cummean(team_offensive_efficiency), n=1),\n    team_season_defensive_efficiency = lag(cummean(team_defensive_efficiency), n=1),\n    team_rolling_mean_offensive_efficiency = rollmean(lag(team_offensive_efficiency, n=1), k=5, align = \"right\", fill=NA),\n    team_rolling_mean_defensive_efficiency = rollmean(lag(team_defensive_efficiency, n=1), k=5, align = \"right\", fill=NA),\n    team_3pt_percentage=lag(cummean(three_point_field_goal_pct), n=1),\n    team_rolling_3pt_percentage=rollmean(lag(three_point_field_goal_pct, n=1), k= 5, align = \"right\", fill = NA),\n    team_turnovers=lag(cummean(turnovers), n=1),\n    team_rolling_tunovers=rollmean(lag(turnovers, n=1), k= 5, align = \"right\", fill = NA),\n    team_offensive_rebounds=lag(cummean(offensive_rebounds), n=1),\n    team_rolling_offensive_rebounds=rollmean(lag(offensive_rebounds, n=1), k= 5, align = \"right\", fill = NA),\n    score_margin = team_score - opponent_team_score,\n    absolute_score_margin = abs(score_margin)\n  ) |> \n  filter(absolute_score_margin <= 40) |> \nungroup()\n\nopponentside <- teamside |> \n  select(-opponent_team_id) |> \n  rename(\n    opponent_team_id = team_id,\n    opponent_season_offensive_efficiency = team_season_offensive_efficiency,\n    opponent_season_defensive_efficiency = team_season_defensive_efficiency,\n    opponent_rolling_mean_offensive_efficiency = team_rolling_mean_offensive_efficiency,\n    opponent_rolling_mean_defensive_efficiency = team_rolling_mean_defensive_efficiency,\n    opponent_3pt_percentage=team_3pt_percentage,\n    opponent_rolling_3pt_percentage= team_rolling_3pt_percentage,\n    opponent_turnovers=team_turnovers,\n    opponent_rolling_tunovers=team_rolling_tunovers,\n    opponent_team_offensive_rebounds=team_offensive_rebounds,\n    opponent_rolling_offensive_rebounds=team_rolling_offensive_rebounds,\n  ) |> \n  select(\n    game_id,\n    opponent_team_id,\n    opponent_season_offensive_efficiency,\n    opponent_season_defensive_efficiency,\n    opponent_rolling_mean_defensive_efficiency,\n    opponent_rolling_mean_offensive_efficiency,\n    opponent_3pt_percentage,\n    opponent_rolling_3pt_percentage,\n    opponent_turnovers,\n    opponent_rolling_tunovers,\n    opponent_team_offensive_rebounds,\n    opponent_rolling_offensive_rebounds\n  )\n\nbothsides <- opponentside |> inner_join(teamside)\n\nbothsides <- bothsides |> mutate(\n  team_result = as.factor(case_when(\n    team_score > opponent_team_score ~ \"W\",\n    opponent_team_score > team_score ~ \"L\"\n)))\n\n\n\n\nmodelgames <- bothsides |> \n  select(\n    game_id, \n    game_date, \n    team_short_display_name, \n    opponent_team_short_display_name, \n    season, \n    team_season_offensive_efficiency,\n    team_season_defensive_efficiency,\n    opponent_season_offensive_efficiency,\n    opponent_season_defensive_efficiency,\n    opponent_rolling_mean_offensive_efficiency,\n    opponent_rolling_mean_defensive_efficiency,\n    team_3pt_percentage,\n    opponent_3pt_percentage,\n    team_rolling_3pt_percentage,\n    opponent_rolling_3pt_percentage,\n    team_turnovers,\n    opponent_turnovers,\n    team_rolling_tunovers,\n    opponent_rolling_tunovers,\n    team_offensive_rebounds,\n    opponent_team_offensive_rebounds,\n    team_rolling_offensive_rebounds,\n    opponent_rolling_offensive_rebounds,\n    team_result\n    ) |> na.omit()\n\nlog_split <- initial_split(modelgames, prop = .8)\nlog_train <- training(log_split)\nlog_test <- testing(log_split)\n\nlog_mod <- \n  logistic_reg() |> \n  set_engine(\"glm\") |>\n  set_mode(\"classification\")\n\nlog_recipe <- \n  recipe(team_result ~ ., data = log_train) |> \n  update_role(game_id, game_date, team_short_display_name, opponent_team_short_display_name, season, new_role = \"ID\") |>\n  step_normalize(all_predictors())\n\n\n\nlog_workflow <- \n  workflow() |> \n  add_model(log_mod) |> \n  add_recipe(log_recipe)\n\nlog_fit <- \n  log_workflow |> \n  fit(data = log_train)\n\ntestpredict <- log_fit |> predict(new_data = log_test) |>\n  bind_cols(log_test)\n\ntestpredict <- log_fit |> predict(new_data = log_test, type=\"prob\") |>\n  bind_cols(testpredict)\n\n\n\nteamside <- df |> \n  group_by(team_id, season) |> \n  arrange(game_date) |> \n  mutate(\n    team_possessions = field_goals_attempted - offensive_rebounds + turnovers + (.475 * free_throws_attempted),\n    team_points_per_possession = team_score/team_possessions,\n    team_defensive_points_per_possession = opponent_team_score/team_possessions,\n    team_offensive_efficiency = team_points_per_possession * 100,\n    team_defensive_efficiency = team_defensive_points_per_possession * 100,\n    team_season_offensive_efficiency = cummean(team_offensive_efficiency),\n    team_season_defensive_efficiency = cummean(team_defensive_efficiency),\n    team_rolling_mean_offensive_efficiency = rollmean(team_offensive_efficiency, k=5, align = \"right\", fill=NA),\n    team_rolling_mean_defensive_efficiency = rollmean(team_defensive_efficiency, k=5, align = \"right\", fill=NA),\n    team_3pt_percentage=cummean(three_point_field_goal_pct),\n    team_rolling_3pt_percentage=rollmean(three_point_field_goal_pct, k= 5, align = \"right\", fill = NA),\n    team_turnovers=cummean(turnovers),\n    team_rolling_tunovers=rollmean(turnovers, k= 5, align = \"right\", fill = NA),\n    team_offensive_rebounds=cummean(offensive_rebounds),\n    team_rolling_offensive_rebounds=rollmean(offensive_rebounds, k= 5, align = \"right\", fill = NA),\n    score_margin = team_score - opponent_team_score,\n    absolute_score_margin = abs(score_margin)\n  ) |> \n  filter(absolute_score_margin <= 40) |> \nungroup()\n\nopponentside <- teamside |> \n  select(-opponent_team_id) |> \n  rename(\n    opponent_team_id = team_id,\n    opponent_season_offensive_efficiency = team_season_offensive_efficiency,\n    opponent_season_defensive_efficiency = team_season_defensive_efficiency,\n    opponent_rolling_mean_offensive_efficiency = team_rolling_mean_offensive_efficiency,\n    opponent_rolling_mean_defensive_efficiency = team_rolling_mean_defensive_efficiency,\n    opponent_3pt_percentage=team_3pt_percentage,\n    opponent_rolling_3pt_percentage= team_rolling_3pt_percentage,\n    opponent_turnovers=team_turnovers,\n    opponent_rolling_tunovers=team_rolling_tunovers,\n    opponent_team_offensive_rebounds=team_offensive_rebounds,\n    opponent_rolling_offensive_rebounds=team_rolling_offensive_rebounds,\n  ) |> \n  select(\n    game_id,\n    opponent_team_id,\n    opponent_season_offensive_efficiency,\n    opponent_season_defensive_efficiency,\n    opponent_rolling_mean_defensive_efficiency,\n    opponent_rolling_mean_offensive_efficiency,\n    opponent_3pt_percentage,\n    opponent_rolling_3pt_percentage,\n    opponent_turnovers,\n    opponent_rolling_tunovers,\n    opponent_team_offensive_rebounds,\n    opponent_rolling_offensive_rebounds\n  )\n\nbothsides <- opponentside |> inner_join(teamside)\n\nbothsides <- bothsides |> mutate(\n  team_result = as.factor(case_when(\n    team_score > opponent_team_score ~ \"W\",\n    opponent_team_score > team_score ~ \"L\"\n)))\n\n\n\n\nmodelgames <- bothsides |> \n  select(\n    game_id, \n    game_date, \n    team_short_display_name, \n    opponent_team_short_display_name, \n    season, \n    team_season_offensive_efficiency,\n    team_season_defensive_efficiency,\n    opponent_season_offensive_efficiency,\n    opponent_season_defensive_efficiency,\n    opponent_rolling_mean_offensive_efficiency,\n    opponent_rolling_mean_defensive_efficiency,\n    team_3pt_percentage,\n    opponent_3pt_percentage,\n    team_rolling_3pt_percentage,\n    opponent_rolling_3pt_percentage,\n    team_turnovers,\n    opponent_turnovers,\n    team_rolling_tunovers,\n    opponent_rolling_tunovers,\n    team_offensive_rebounds,\n    opponent_team_offensive_rebounds,\n    team_rolling_offensive_rebounds,\n    opponent_rolling_offensive_rebounds,\n    team_result\n    ) |> na.omit()\n\nplayingames <- tibble(\n  team_short_display_name =\"Howard\",\n  opponent_short_display_name = \"Wagner\"\n) |> add_row(\n  team_short_display_name = \"Boise St\",\n  opponent_short_display_name = \"Colorado\"\n) |> add_row(\n  team_short_display_name = \"Montana St\",\n  opponent_short_display_name = \"Grambling\"\n) |> add_row(\n  team_short_display_name = \"Colorado St\",\n  opponent_short_display_name = \"Virginia\"\n)\n\n\neastround1games <- tibble(\n  team_short_display_name=\"UConn\",\n  opponent_team_short_display_name=\"Stetson\"\n) |> add_row(\n  team_short_display_name=\"FAU\",\n  opponent_team_short_display_name=\"Northwestern\"\n) |> add_row(\n  team_short_display_name=\"San Diego St\",\n  opponent_team_short_display_name=\"UAB\"\n) |> add_row(\n  team_short_display_name=\"Auburn\",\n  opponent_team_short_display_name=\"Yale\"\n) |> add_row(\n  team_short_display_name=\"BYU\",\n  opponent_team_short_display_name=\"Duquesne\"\n) |> add_row(\n  team_short_display_name=\"Illinois\",\n  opponent_team_short_display_name=\"Morehead St\"\n) |> add_row(\n  team_short_display_name=\"Washington St\",\n  opponent_team_short_display_name=\"Drake\"\n) |> add_row(\n  team_short_display_name=\"Iowa State\",\n  opponent_team_short_display_name=\"S Dakota St\"\n)\n\neastround1games <- modelgames |> \n  group_by(team_short_display_name) |> \n  filter(game_date == max(game_date) & season == 2024) |> \n  ungroup() |> \n  select(-team_result, -starts_with(\"opponent\")) |> \n  right_join(eastround1games)\n\neastround1games <- modelgames |> \n  group_by(opponent_team_short_display_name) |> \n  filter(game_date == max(game_date) & season == 2024) |> \n  ungroup() |> \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |> \n  right_join(eastround1games) \n\neast1 <- log_fit |> predict(new_data = eastround1games) |>\n  bind_cols(eastround1games) |> select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\neast1 <- log_fit |> predict(new_data = eastround1games, type=\"prob\") |>\n  bind_cols(east1) |> select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n\n\neastround2games <- tibble(\n  team_short_display_name=\"UConn\",\n  opponent_team_short_display_name=\"FAU\"\n) |> add_row(\n  team_short_display_name=\"San Diego St\",\n  opponent_team_short_display_name=\"Auburn\"\n) |> add_row(\n  team_short_display_name=\"BYU\",\n  opponent_team_short_display_name=\"Illinois\"\n) |> add_row(\n  team_short_display_name=\"Drake\",\n  opponent_team_short_display_name=\"Iowa State\"\n) \n\neastround2games <- modelgames |> \n  group_by(team_short_display_name) |> \n  filter(game_date == max(game_date) & season == 2024) |> \n  ungroup() |> \n  select(-team_result, -starts_with(\"opponent\")) |> \n  right_join(eastround2games)\n\neastround2games <- modelgames |> \n  group_by(opponent_team_short_display_name) |> \n  filter(game_date == max(game_date) & season == 2024) |> \n  ungroup() |> \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |> \n  right_join(eastround2games) \n\neast2 <- log_fit |> predict(new_data = eastround2games) |>\n  bind_cols(eastround2games) |> select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\neast2 <- log_fit |> predict(new_data = eastround2games, type=\"prob\") |>\n  bind_cols(east2) |> select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n\n\neast16games <- tibble(\n  team_short_display_name=\"UConn\",\n  opponent_team_short_display_name=\"San Diego St\"\n) |> add_row(\n  team_short_display_name=\"BYU\",\n  opponent_team_short_display_name=\"Iowa State\"\n) \n\neast16games <- modelgames |> \n  group_by(team_short_display_name) |> \n  filter(game_date == max(game_date) & season == 2024) |> \n  ungroup() |> \n  select(-team_result, -starts_with(\"opponent\")) |> \n  right_join(east16games)\n\neast16games <- modelgames |> \n  group_by(opponent_team_short_display_name) |> \n  filter(game_date == max(game_date) & season == 2024) |> \n  ungroup() |> \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |> \n  right_join(east16games) \n\neast16 <- log_fit |> predict(new_data = east16games) |>\n  bind_cols(east16games) |> select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\neast16 <- log_fit |> predict(new_data = east16games, type=\"prob\") |>\n  bind_cols(east16) |> select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n\n\neast8games <- tibble(\n  team_short_display_name=\"UConn\",\n  opponent_team_short_display_name=\"BYU\"\n) \n\neast8games <- modelgames |> \n  group_by(team_short_display_name) |> \n  filter(game_date == max(game_date) & season == 2024) |> \n  ungroup() |> \n  select(-team_result, -starts_with(\"opponent\")) |> \n  right_join(east8games)\n\neast8games <- modelgames |> \n  group_by(opponent_team_short_display_name) |> \n  filter(game_date == max(game_date) & season == 2024) |> \n  ungroup() |> \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |> \n  right_join(east8games) \n\neast8 <- log_fit |> predict(new_data = east8games) |>\n  bind_cols(east8games) |> select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\neast8 <- log_fit |> predict(new_data = east8games, type=\"prob\") |>\n  bind_cols(east8) |> select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n\n\nwestround1games <- tibble(\n  team_short_display_name=\"North Carolina\",\n  opponent_team_short_display_name=\"Wagner\"\n) |> add_row(\n  team_short_display_name=\"Mississippi St\",\n  opponent_team_short_display_name=\"Michigan St\"\n) |> add_row(\n  team_short_display_name=\"Saint Mary's\",\n  opponent_team_short_display_name=\"Grand Canyon\"\n) |> add_row(\n  team_short_display_name=\"Alabama\",\n  opponent_team_short_display_name=\"Charleston\"\n) |> add_row(\n  team_short_display_name=\"Clemson\",\n  opponent_team_short_display_name=\"New Mexico\"\n) |> add_row(\n  team_short_display_name=\"Baylor\",\n  opponent_team_short_display_name=\"Colgate\"\n) |> add_row(\n  team_short_display_name=\"Dayton\",\n  opponent_team_short_display_name=\"Nevada\"\n) |> add_row(\n  team_short_display_name=\"Arizona\",\n  opponent_team_short_display_name=\"Long Beach St\"\n)\n\nwestround1games <- modelgames |> \n  group_by(team_short_display_name) |> \n  filter(game_date == max(game_date) & season == 2024) |> \n  ungroup() |> \n  select(-team_result, -starts_with(\"opponent\")) |> \n  right_join(westround1games)\n\nwestround1games <- modelgames |> \n  group_by(opponent_team_short_display_name) |> \n  filter(game_date == max(game_date) & season == 2024) |> \n  ungroup() |> \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |> \n  right_join(westround1games) \n\nwest1 <- log_fit |> predict(new_data = westround1games) |>\n  bind_cols(westround1games) |> select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nwest1 <- log_fit |> predict(new_data = westround1games, type=\"prob\") |>\n  bind_cols(west1) |> select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n\n\nwestround2games <- tibble(\n  team_short_display_name=\"North Carolina\",\n  opponent_team_short_display_name=\"Michigan St\"\n) |> add_row(\n  team_short_display_name=\"Saint Mary's\",\n  opponent_team_short_display_name=\"Alabama\"\n) |> add_row(\n  team_short_display_name=\"New Mexico\",\n  opponent_team_short_display_name=\"Baylor\"\n) |> add_row(\n  team_short_display_name=\"Nevada\",\n  opponent_team_short_display_name=\"Arizona\"\n) \n\nwestround2games <- modelgames |> \n  group_by(team_short_display_name) |> \n  filter(game_date == max(game_date) & season == 2024) |> \n  ungroup() |> \n  select(-team_result, -starts_with(\"opponent\")) |> \n  right_join(westround2games)\n\nwestround2games <- modelgames |> \n  group_by(opponent_team_short_display_name) |> \n  filter(game_date == max(game_date) & season == 2024) |> \n  ungroup() |> \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |> \n  right_join(westround2games) \n\nwest2 <- log_fit |> predict(new_data = westround2games) |>\n  bind_cols(westround2games) |> select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nwest2 <- log_fit |> predict(new_data = westround2games, type=\"prob\") |>\n  bind_cols(west2) |> select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n\n\nwest16games <- tibble(\n  team_short_display_name=\"North Carolina\",\n  opponent_team_short_display_name=\"Saint Mary's\"\n) |> add_row(\n  team_short_display_name=\"New Mexico\",\n  opponent_team_short_display_name=\"Arizona\"\n) \n\nwest16games <- modelgames |> \n  group_by(team_short_display_name) |> \n  filter(game_date == max(game_date) & season == 2024) |> \n  ungroup() |> \n  select(-team_result, -starts_with(\"opponent\")) |> \n  right_join(west16games)\n\nwest16games <- modelgames |> \n  group_by(opponent_team_short_display_name) |> \n  filter(game_date == max(game_date) & season == 2024) |> \n  ungroup() |> \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |> \n  right_join(west16games) \n\nwest16 <- log_fit |> predict(new_data = west16games) |>\n  bind_cols(west16games) |> select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nwest16 <- log_fit |> predict(new_data = west16games, type=\"prob\") |>\n  bind_cols(west16) |> select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n\n\nwest8games <- tibble(\n  team_short_display_name=\"Saint Mary's\",\n  opponent_team_short_display_name=\"Arizona\"\n) \n\nwest8games <- modelgames |> \n  group_by(team_short_display_name) |> \n  filter(game_date == max(game_date) & season == 2024) |> \n  ungroup() |> \n  select(-team_result, -starts_with(\"opponent\")) |> \n  right_join(west8games)\n\nwest8games <- modelgames |> \n  group_by(opponent_team_short_display_name) |> \n  filter(game_date == max(game_date) & season == 2024) |> \n  ungroup() |> \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |> \n  right_join(west8games) \n\nwest8 <- log_fit |> predict(new_data = west8games) |>\n  bind_cols(west8games) |> select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nwest8 <- log_fit |> predict(new_data = west8games, type=\"prob\") |>\n  bind_cols(west8) |> select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n\n\nsouthround1games <- tibble(\n  team_short_display_name=\"Houston\",\n  opponent_team_short_display_name=\"Longwood\"\n) |> add_row(\n  team_short_display_name=\"Nebraska\",\n  opponent_team_short_display_name=\"Texas A&M\"\n) |> add_row(\n  team_short_display_name=\"Wisconsin\",\n  opponent_team_short_display_name=\"James Madison\"\n) |> add_row(\n  team_short_display_name=\"Duke\",\n  opponent_team_short_display_name=\"Vermont\"\n) |> add_row(\n  team_short_display_name=\"Texas Tech\",\n  opponent_team_short_display_name=\"NC State\"\n) |> add_row(\n  team_short_display_name=\"Kentucky\",\n  opponent_team_short_display_name=\"Oakland\"\n) |> add_row(\n  team_short_display_name=\"Florida\",\n  opponent_team_short_display_name=\"Colorado\"\n) |> add_row(\n  team_short_display_name=\"Marquette\",\n  opponent_team_short_display_name=\"Western KY\"\n)\n\nsouthround1games <- modelgames |> \n  group_by(team_short_display_name) |> \n  filter(game_date == max(game_date) & season == 2024) |> \n  ungroup() |> \n  select(-team_result, -starts_with(\"opponent\")) |> \n  right_join(southround1games)\n\nsouthround1games <- modelgames |> \n  group_by(opponent_team_short_display_name) |> \n  filter(game_date == max(game_date) & season == 2024) |> \n  ungroup() |> \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |> \n  right_join(southround1games) \n\nsouth1 <- log_fit |> predict(new_data = southround1games) |>\n  bind_cols(southround1games) |> select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nsouth1 <- log_fit |> predict(new_data = southround1games, type=\"prob\") |>\n  bind_cols(south1) |> select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n\n\nsouthround2games <- tibble(\n  team_short_display_name=\"Houston\",\n  opponent_team_short_display_name=\"Texas A&M\"\n) |> add_row(\n  team_short_display_name=\"James Madison\",\n  opponent_team_short_display_name=\"Duke\"\n) |> add_row(\n  team_short_display_name=\"Texas Tech\",\n  opponent_team_short_display_name=\"Kentucky\"\n) |> add_row(\n  team_short_display_name=\"Florida\",\n  opponent_team_short_display_name=\"Marquette\"\n) \n\nsouthround2games <- modelgames |> \n  group_by(team_short_display_name) |> \n  filter(game_date == max(game_date) & season == 2024) |> \n  ungroup() |> \n  select(-team_result, -starts_with(\"opponent\")) |> \n  right_join(southround2games)\n\nsouthround2games <- modelgames |> \n  group_by(opponent_team_short_display_name) |> \n  filter(game_date == max(game_date) & season == 2024) |> \n  ungroup() |> \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |> \n  right_join(southround2games) \n\nsouth2 <- log_fit |> predict(new_data = southround2games) |>\n  bind_cols(southround2games) |> select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nsouth2 <- log_fit |> predict(new_data = southround2games, type=\"prob\") |>\n  bind_cols(south2) |> select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n\n\nsouth16games <- tibble(\n  team_short_display_name=\"Houston\",\n  opponent_team_short_display_name=\"James Madison\"\n) |> add_row(\n  team_short_display_name=\"Marquette\",\n  opponent_team_short_display_name=\"Kentucky\"\n) \n\nsouth16games <- modelgames |> \n  group_by(team_short_display_name) |> \n  filter(game_date == max(game_date) & season == 2024) |> \n  ungroup() |> \n  select(-team_result, -starts_with(\"opponent\")) |> \n  right_join(south16games)\n\nsouth16games <- modelgames |> \n  group_by(opponent_team_short_display_name) |> \n  filter(game_date == max(game_date) & season == 2024) |> \n  ungroup() |> \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |> \n  right_join(south16games) \n\nsouth16 <- log_fit |> predict(new_data = south16games) |>\n  bind_cols(south16games) |> select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nsouth16 <- log_fit |> predict(new_data = south16games, type=\"prob\") |>\n  bind_cols(south16) |> select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n\n\nsouth8games <- tibble(\n  team_short_display_name=\"Houston\",\n  opponent_team_short_display_name=\"Kentucky\"\n) \n\nsouth8games <- modelgames |> \n  group_by(team_short_display_name) |> \n  filter(game_date == max(game_date) & season == 2024) |> \n  ungroup() |> \n  select(-team_result, -starts_with(\"opponent\")) |> \n  right_join(south8games)\n\nsouth8games <- modelgames |> \n  group_by(opponent_team_short_display_name) |> \n  filter(game_date == max(game_date) & season == 2024) |> \n  ungroup() |> \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |> \n  right_join(south8games) \n\nsouth8 <- log_fit |> predict(new_data = south8games) |>\n  bind_cols(south8games) |> select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nsouth8 <- log_fit |> predict(new_data = south8games, type=\"prob\") |>\n  bind_cols(south8) |> select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n\n\nmidwestround1games <- tibble(\n  team_short_display_name=\"Purdue\",\n  opponent_team_short_display_name=\"Grambling\"\n) |> add_row(\n  team_short_display_name=\"Utah State\",\n  opponent_team_short_display_name=\"TCU\"\n) |> add_row(\n  team_short_display_name=\"Gonzaga\",\n  opponent_team_short_display_name=\"McNeese\"\n) |> add_row(\n  team_short_display_name=\"Kansas\",\n  opponent_team_short_display_name=\"Samford\"\n) |> add_row(\n  team_short_display_name=\"South Carolina\",\n  opponent_team_short_display_name=\"Oregon\"\n) |> add_row(\n  team_short_display_name=\"Creighton\",\n  opponent_team_short_display_name=\"Akron\"\n) |> add_row(\n  team_short_display_name=\"Texas\",\n  opponent_team_short_display_name=\"Colorado St\"\n) |> add_row(\n  team_short_display_name=\"Tennessee\",\n  opponent_team_short_display_name=\"Saint Peter's\"\n)\n\nmidwestround1games <- modelgames |> \n  group_by(team_short_display_name) |> \n  filter(game_date == max(game_date) & season == 2024) |> \n  ungroup() |> \n  select(-team_result, -starts_with(\"opponent\")) |> \n  right_join(midwestround1games)\n\nmidwestround1games <- modelgames |> \n  group_by(opponent_team_short_display_name) |> \n  filter(game_date == max(game_date) & season == 2024) |> \n  ungroup() |> \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |> \n  right_join(midwestround1games) \n\nmidwest1 <- log_fit |> predict(new_data = midwestround1games) |>\n  bind_cols(midwestround1games) |> select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nmidwest1 <- log_fit |> predict(new_data = midwestround1games, type=\"prob\") |>\n  bind_cols(midwest1) |> select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n\n\nmidwestround2games <- tibble(\n  team_short_display_name=\"Purdue\",\n  opponent_team_short_display_name=\"Utah State\"\n) |> add_row(\n  team_short_display_name=\"Gonzaga\",\n  opponent_team_short_display_name=\"Samford\"\n) |> add_row(\n  team_short_display_name=\"South Carolina\",\n  opponent_team_short_display_name=\"Creighton\"\n) |> add_row(\n  team_short_display_name=\"Colorado St\",\n  opponent_team_short_display_name=\"Tennessee\"\n) \n\nmidwestround2games <- modelgames |> \n  group_by(team_short_display_name) |> \n  filter(game_date == max(game_date) & season == 2024) |> \n  ungroup() |> \n  select(-team_result, -starts_with(\"opponent\")) |> \n  right_join(midwestround2games)\n\nmidwestround2games <- modelgames |> \n  group_by(opponent_team_short_display_name) |> \n  filter(game_date == max(game_date) & season == 2024) |> \n  ungroup() |> \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |> \n  right_join(midwestround2games) \n\nmidwest2 <- log_fit |> predict(new_data = midwestround2games) |>\n  bind_cols(midwestround2games) |> select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nmidwest2 <- log_fit |> predict(new_data = midwestround2games, type=\"prob\") |>\n  bind_cols(midwest2) |> select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n\n\nmidwest16games <- tibble(\n  team_short_display_name=\"Purdue\",\n  opponent_team_short_display_name=\"Gonzaga\"\n) |> add_row(\n  team_short_display_name=\"Creighton\",\n  opponent_team_short_display_name=\"Tennessee\"\n) \n\nmidwest16games <- modelgames |> \n  group_by(team_short_display_name) |> \n  filter(game_date == max(game_date) & season == 2024) |> \n  ungroup() |> \n  select(-team_result, -starts_with(\"opponent\")) |> \n  right_join(midwest16games)\n\nmidwest16games <- modelgames |> \n  group_by(opponent_team_short_display_name) |> \n  filter(game_date == max(game_date) & season == 2024) |> \n  ungroup() |> \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |> \n  right_join(midwest16games) \n\nmidwest16 <- log_fit |> predict(new_data = midwest16games) |>\n  bind_cols(midwest16games) |> select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nmidwest16 <- log_fit |> predict(new_data = midwest16games, type=\"prob\") |>\n  bind_cols(midwest16) |> select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n\n\nmidwest8games <- tibble(\n  team_short_display_name=\"Gonzaga\",\n  opponent_team_short_display_name=\"Tennessee\"\n) \n\nmidwest8games <- modelgames |> \n  group_by(team_short_display_name) |> \n  filter(game_date == max(game_date) & season == 2024) |> \n  ungroup() |> \n  select(-team_result, -starts_with(\"opponent\")) |> \n  right_join(midwest8games)\n\nmidwest8games <- modelgames |> \n  group_by(opponent_team_short_display_name) |> \n  filter(game_date == max(game_date) & season == 2024) |> \n  ungroup() |> \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |> \n  right_join(midwest8games) \n\nmidwest8 <- log_fit |> predict(new_data = midwest8games) |>\n  bind_cols(midwest8games) |> select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nmidwest8 <- log_fit |> predict(new_data = midwest8games, type=\"prob\") |>\n  bind_cols(midwest8) |> select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n\n\nfinalfourgames <- tibble(\n  team_short_display_name=\"UConn\",\n  opponent_team_short_display_name=\"Saint Mary's\"\n) |> add_row(\n  team_short_display_name=\"Houston\",\n  opponent_team_short_display_name=\"Gonzaga\"\n) \n\nfinalfourgames <- modelgames |> \n  group_by(team_short_display_name) |> \n  filter(game_date == max(game_date) & season == 2024) |> \n  ungroup() |> \n  select(-team_result, -starts_with(\"opponent\")) |> \n  right_join(finalfourgames)\n\nfinalfourgames <- modelgames |> \n  group_by(opponent_team_short_display_name) |> \n  filter(game_date == max(game_date) & season == 2024) |> \n  ungroup() |> \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |> \n  right_join(finalfourgames) \n\nfinalfour <- log_fit |> predict(new_data = finalfourgames) |>\n  bind_cols(finalfourgames) |> select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nfinalfour <- log_fit |> predict(new_data = finalfourgames, type=\"prob\") |>\n  bind_cols(finalfour) |> select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n\n\nnationaltitle <- tibble(\n  team_short_display_name=\"Houston\",\n  opponent_team_short_display_name=\"UConn\"\n) \n\nnationaltitle <- modelgames |> \n  group_by(team_short_display_name) |> \n  filter(game_date == max(game_date) & season == 2024) |> \n  ungroup() |> \n  select(-team_result, -starts_with(\"opponent\")) |> \n  right_join(nationaltitle)\n\nnationaltitle <- modelgames |> \n  group_by(opponent_team_short_display_name) |> \n  filter(game_date == max(game_date) & season == 2024) |> \n  ungroup() |> \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) |> \n  right_join(nationaltitle) \n\nnatty <- log_fit |> predict(new_data = nationaltitle) |>\n  bind_cols(nationaltitle) |> select(.pred_class, team_short_display_name, opponent_team_short_display_name, everything())\n\nnatty <- log_fit |> predict(new_data = nationaltitle, type=\"prob\") |>\n  bind_cols(natty) |> select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_team_short_display_name, everything())\n\n\nThe predictive data set we used featured every basketball game between Division-I programs since 2015 excluding blowouts larger than 40 points. My model was based on five key metrics. Team offensive efficiency, defensive efficiency, average 3-point percentage, offensive rebounds and turnovers. An opponent’s numbers in those areas were accounted for as well.\nOffensive and defensive efficiency are fairly standard yardsticks for measuring a team’s ability. I added 3-point shooting considering its relevance to the modern game. Offensive rebounds and turnovers come into play because they generate (or lose) extra possessions for a team. \nIn retrospect, I would have liked to create or add more advanced metrics if I had more time. I was hesitant to go all in on the rebounding because one classmate’s model, when tested on the Big Ten Tournament, predicted No. 12-seeded Rutgers as the tournament champion.\n\n\nCode\nsummary(log_recipe) %>%\n  select(variable, role) %>% \n  filter(role != \"ID\") %>%\n  gt() %>%\n  tab_header(\n    title = \"Model Metrics\",\n    subtitle = \"Rolling averages galore.\"\n  ) %>%  \n  tab_source_note(\n    source_note = md(\"**By:** Grant Hansen\")\n  ) %>% \n  tab_style(\n    style = cell_text(color = \"black\", weight = \"bold\", align = \"left\"),\n    locations = cells_title(\"title\")\n  ) %>% \n  tab_style(\n    style = cell_text(color = \"black\", align = \"left\"),\n    locations = cells_title(\"subtitle\")\n  ) %>%\n  tab_style(\n     locations = cells_column_labels(columns = everything()),\n     style = list(\n       cell_borders(sides = \"bottom\", weight = px(3)),\n       cell_text(weight = \"bold\", size=12)\n     )\n   ) %>%\n  opt_row_striping() %>% \n  opt_table_lines(\"none\")\n\n\n\n\n\n\n  \n    \n      Model Metrics\n    \n    \n      Rolling averages galore.\n    \n  \n  \n    \n      variable\n      role\n    \n  \n  \n    team_season_offensive_efficiency\npredictor\n    team_season_defensive_efficiency\npredictor\n    opponent_season_offensive_efficiency\npredictor\n    opponent_season_defensive_efficiency\npredictor\n    opponent_rolling_mean_offensive_efficiency\npredictor\n    opponent_rolling_mean_defensive_efficiency\npredictor\n    team_3pt_percentage\npredictor\n    opponent_3pt_percentage\npredictor\n    team_rolling_3pt_percentage\npredictor\n    opponent_rolling_3pt_percentage\npredictor\n    team_turnovers\npredictor\n    opponent_turnovers\npredictor\n    team_rolling_tunovers\npredictor\n    opponent_rolling_tunovers\npredictor\n    team_offensive_rebounds\npredictor\n    opponent_team_offensive_rebounds\npredictor\n    team_rolling_offensive_rebounds\npredictor\n    opponent_rolling_offensive_rebounds\npredictor\n    team_result\noutcome\n  \n  \n    \n      By: Grant Hansen\n    \n  \n  \n\n\n\n\nWhile I did correctly predict the champion, my bracket model created an incredibly odd Final Four. It loved UConn and Houston. No surprise. But for some reason, fellow West Coast Conference five seeds Gonzaga and Saint Marys made up the other two teams. \nFor reference, the Gaels last advanced past the second round in 2010 and have only ever made two Sweet Sixteen appearances. One of those was in 1959.\nIt’s safe to say I wasn’t in love with that group.Yet, that wasn’t the worst team my model loved.\n\n\nCode\nfinalfour %>% \n  select(team_short_display_name, .pred_class, .pred_W, opponent_team_short_display_name) %>%\n  gt() %>% \n  cols_label(\n    team_short_display_name = \"Team\",\n    .pred_class = \"Prediction\",\n    .pred_W = \"Win Confidence\",\n    opponent_team_short_display_name = \"Opponent\"\n  ) %>%\n  tab_header(\n    title = \"Final Four\",\n    subtitle = \"Why the love for the West Coast Conference?\"\n  ) %>%  \n  tab_source_note(\n    source_note = md(\"**By:** Grant Hansen\")\n  ) %>% \n  tab_style(\n    style = cell_text(color = \"black\", weight = \"bold\", align = \"left\"),\n    locations = cells_title(\"title\")\n  ) %>% \n  tab_style(\n    style = cell_text(color = \"black\", align = \"left\"),\n    locations = cells_title(\"subtitle\")\n  ) %>%\n  tab_style(\n     locations = cells_column_labels(columns = everything()),\n     style = list(\n       cell_borders(sides = \"bottom\", weight = px(3)),\n       cell_text(weight = \"bold\", size=12)\n     )\n   ) %>%\n  opt_row_striping() %>% \n  opt_table_lines(\"none\") %>%\n    fmt_percent(\n    columns = c(.pred_W),\n    decimals = 1\n  )\n\n\n\n\n\n\n  \n    \n      Final Four\n    \n    \n      Why the love for the West Coast Conference?\n    \n  \n  \n    \n      Team\n      Prediction\n      Win Confidence\n      Opponent\n    \n  \n  \n    Houston\nW\n54.5%\nGonzaga\n    UConn\nW\n59.2%\nSaint Mary's\n  \n  \n    \n      By: Grant Hansen\n    \n  \n  \n\n\n\n\nBYU made it all the way to the Elite Eight in my model with wins over No. 2 Iowa State and No. 3 Illinois. That’s a far cry from the Cougars’ opening-round 71-67 upset loss to Duquesne. I hated this pick from the jump, couldn’t find a way for the model to back off BYU and in the end against my better judgment I kept it.\nThe Midwest Region is where my bracket excelled. \nOverall I correctly predicted 10-of-15 possible games and it would have been 11 if not for the faux foul called on Samford in its loss to Kansas in the first round. My primary miss came once again via my model’s love affair with the WCC. Gonzaga’s inability to stick with Purdue in the second half of their Sweet Sixteen matchup knocked another Final Four team out of my bracket.\n\n\nCode\nmidwest1 %>% \n  select(team_short_display_name, .pred_class, .pred_W, opponent_team_short_display_name) %>%\n  gt() %>% \n  cols_label(\n    team_short_display_name = \"Team\",\n    .pred_class = \"Prediction\",\n    .pred_W = \"Win Confidence\",\n    opponent_team_short_display_name = \"Opponent\"\n  ) %>%\n  tab_header(\n    title = \"Midwest Round 1 Predictions\",\n    subtitle = \"A strong opening round led to 10 of 15 correct picks in the region.\"\n  ) %>%  \n  tab_source_note(\n    source_note = md(\"**By:** Grant Hansen\")\n  ) %>% \n  tab_style(\n    style = cell_text(color = \"black\", weight = \"bold\", align = \"left\"),\n    locations = cells_title(\"title\")\n  ) %>% \n  tab_style(\n    style = cell_text(color = \"black\", align = \"left\"),\n    locations = cells_title(\"subtitle\")\n  ) %>%\n  tab_style(\n     locations = cells_column_labels(columns = everything()),\n     style = list(\n       cell_borders(sides = \"bottom\", weight = px(3)),\n       cell_text(weight = \"bold\", size=12)\n     )\n   ) %>%\n  opt_row_striping() %>% \n  opt_table_lines(\"none\") %>%\n    fmt_percent(\n    columns = c(.pred_W),\n    decimals = 1\n  )\n\n\n\n\n\n\n  \n    \n      Midwest Round 1 Predictions\n    \n    \n      A strong opening round led to 10 of 15 correct picks in the region.\n    \n  \n  \n    \n      Team\n      Prediction\n      Win Confidence\n      Opponent\n    \n  \n  \n    Kansas\nL\n41.7%\nSamford\n    Gonzaga\nW\n51.0%\nMcNeese\n    Utah State\nW\n58.1%\nTCU\n    Texas\nL\n49.0%\nColorado St\n    Purdue\nW\n87.9%\nGrambling\n    South Carolina\nW\n54.7%\nOregon\n    Tennessee\nW\n78.0%\nSaint Peter's\n    Creighton\nW\n65.2%\nAkron\n  \n  \n    \n      By: Grant Hansen\n    \n  \n  \n\n\n\n\nDespite the failures of the BYU pick, the East Region was my second-best quadrant. Excluding the Cougars, only three picks in the region were wrong and they were all in the first round. Northwestern’s upset of FAU, Yale over Auburn and Washington State’s win over Drake were the first-round miscues in that portion of the bracket.\n\n\nCode\neast16 %>% \n  select(team_short_display_name, .pred_class, .pred_W, opponent_team_short_display_name) %>%\n  gt() %>% \n  cols_label(\n    team_short_display_name = \"Team\",\n    .pred_class = \"Prediction\",\n    .pred_W = \"Win Confidence\",\n    opponent_team_short_display_name = \"Opponent\"\n  ) %>%\n  tab_header(\n    title = \"East Sweet 16 Predictions\",\n    subtitle = \"Apart from my appalling BYU pick, I was perfect in the East Sweet 16.\"\n  ) %>%  \n  tab_source_note(\n    source_note = md(\"**By:** Grant Hansen\")\n  ) %>% \n  tab_style(\n    style = cell_text(color = \"black\", weight = \"bold\", align = \"left\"),\n    locations = cells_title(\"title\")\n  ) %>% \n  tab_style(\n    style = cell_text(color = \"black\", align = \"left\"),\n    locations = cells_title(\"subtitle\")\n  ) %>%\n  tab_style(\n     locations = cells_column_labels(columns = everything()),\n     style = list(\n       cell_borders(sides = \"bottom\", weight = px(3)),\n       cell_text(weight = \"bold\", size=12)\n     )\n   ) %>%\n  opt_row_striping() %>% \n  opt_table_lines(\"none\") %>%\n    fmt_percent(\n    columns = c(.pred_W),\n    decimals = 1\n  )\n\n\n\n\n\n\n  \n    \n      East Sweet 16 Predictions\n    \n    \n      Apart from my appalling BYU pick, I was perfect in the East Sweet 16.\n    \n  \n  \n    \n      Team\n      Prediction\n      Win Confidence\n      Opponent\n    \n  \n  \n    BYU\nW\n50.5%\nIowa State\n    UConn\nW\n76.0%\nSan Diego St\n  \n  \n    \n      By: Grant Hansen\n    \n  \n  \n\n\n\n\nI think I would like to do a better job of including things that aren’t directly incorporated in offensive and defensive efficiency for next year. My professor’s Elo Ratings or other KenPom related metrics would be a lot of fun to try and include. \nUnfortunately, no model will ever perfectly predict March Madness. That’s a good thing. It’s why it’s fun. Trying to get there, although futile, is a lot of fun, too. I think this was a great start, now I’m excited to try and see where I can take things next."
  },
  {
    "objectID": "posts/predicting_2024s_most_valuable_fantasy_football_wide_receivers/index (1).html",
    "href": "posts/predicting_2024s_most_valuable_fantasy_football_wide_receivers/index (1).html",
    "title": "Calling your shot: Predicting the NFL’s most valuable fantasy wide receivers for 2024 using linear regression",
    "section": "",
    "text": "The NFL Draft is in the rear-view mirror and that means fantasy football is right around the corner.\nWhether it be a keeper league with a rookie draft this summer or a regular draft in the fall, rookie wide receivers will be in high demand. Everyone is searching for the next Puka Nacua and with the help of some R code and modeling, I’m going to take a stab at who the best freshman wideouts will be in 2024.\nUsing a simple logistic regression model, I projected the top 10 receivers from this year’s draft and their fantasy outputs in the upcoming season. The predictive metrics included college receiving yards, receptions and touchdowns as well as the receiver’s landing spot and the team’s average passing yards, touchdowns and completions over the last four years.\nThe average lifespan for an NFL coach since 1990 is roughly four seasons. Everything was designed for a PPR format."
  },
  {
    "objectID": "posts/predicting_2024s_most_valuable_fantasy_football_wide_receivers/index (1).html#xavier-worthy-kansas-city-chiefs-drafted-no.-28",
    "href": "posts/predicting_2024s_most_valuable_fantasy_football_wide_receivers/index (1).html#xavier-worthy-kansas-city-chiefs-drafted-no.-28",
    "title": "Calling your shot: Predicting the NFL’s most valuable fantasy wide receivers for 2024 using linear regression",
    "section": "1. Xavier Worthy, Kansas City Chiefs, Drafted No. 28",
    "text": "1. Xavier Worthy, Kansas City Chiefs, Drafted No. 28\nThe fastest 40-yard dash in the history of the NFL Combine (4.21 seconds) plus Patrick Mahomes seems like a solid combination. The Chiefs traded up to select Worthy and considering his speed and quarterback play, it’s no surprise that he tops this list. He posted 60 catches for 760 yards and nine touchdowns last year and gives Mahomes’ his first true top target since Tyreek Hill."
  },
  {
    "objectID": "posts/predicting_2024s_most_valuable_fantasy_football_wide_receivers/index (1).html#brian-thomas-jr.-jacksonville-jaguars-drafted-no.-23",
    "href": "posts/predicting_2024s_most_valuable_fantasy_football_wide_receivers/index (1).html#brian-thomas-jr.-jacksonville-jaguars-drafted-no.-23",
    "title": "Calling your shot: Predicting the NFL’s most valuable fantasy wide receivers for 2024 using linear regression",
    "section": "2. Brian Thomas Jr., Jacksonville Jaguars, Drafted No. 23",
    "text": "2. Brian Thomas Jr., Jacksonville Jaguars, Drafted No. 23\nThomas may come as a bit of a surprise at this spot, but his collegiate production speaks for itself even if mock drafts didn’t hold him in as high regard as this model. His 1,177 receiving yards were the 12th most in college football last year and his 17 touchdowns were the most in Division-I. Thomas will fit in for Calvin Ridley, who had a disappointing 2023 campaign."
  },
  {
    "objectID": "posts/predicting_2024s_most_valuable_fantasy_football_wide_receivers/index (1).html#malik-nabers-new-york-giants-drafted-no.-6",
    "href": "posts/predicting_2024s_most_valuable_fantasy_football_wide_receivers/index (1).html#malik-nabers-new-york-giants-drafted-no.-6",
    "title": "Calling your shot: Predicting the NFL’s most valuable fantasy wide receivers for 2024 using linear regression",
    "section": "3. Malik Nabers, New York Giants, Drafted No. 6",
    "text": "3. Malik Nabers, New York Giants, Drafted No. 6\nThe Giants have not had a 1,000 yard receiver since Odell Beckham Jr. in 2018. Now New York turns its attention to another LSU wideout to see if the team’s six year streak will come to an end. Naber’s finished with 1,569 receving yards last year (the second-most nationally) and 14 touchdowns (tied for third)."
  },
  {
    "objectID": "posts/predicting_2024s_most_valuable_fantasy_football_wide_receivers/index (1).html#rickey-pearsall-san-francisco-49ers-drafted-no.-31",
    "href": "posts/predicting_2024s_most_valuable_fantasy_football_wide_receivers/index (1).html#rickey-pearsall-san-francisco-49ers-drafted-no.-31",
    "title": "Calling your shot: Predicting the NFL’s most valuable fantasy wide receivers for 2024 using linear regression",
    "section": "4. Rickey Pearsall, San Francisco 49ers, Drafted No. 31",
    "text": "4. Rickey Pearsall, San Francisco 49ers, Drafted No. 31\nWith some rumblings about possible trades for either Brandon Aiyuk or Deebo Samuel, the 49ers took Pearsall with the penultimate pick of the first round. He led Florida in receptions (65), receiving yards (965) and receiving yards per game (80.4). Even if he doesn’t get involved immediately, should one of San Francisco’s stars find themselves on another team before the year starts or midseason, Pearsall would be heavily involved."
  },
  {
    "objectID": "posts/predicting_2024s_most_valuable_fantasy_football_wide_receivers/index (1).html#keon-coleman-buffalo-bills-drafted-no.-33",
    "href": "posts/predicting_2024s_most_valuable_fantasy_football_wide_receivers/index (1).html#keon-coleman-buffalo-bills-drafted-no.-33",
    "title": "Calling your shot: Predicting the NFL’s most valuable fantasy wide receivers for 2024 using linear regression",
    "section": "5. Keon Coleman, Buffalo Bills, Drafted No. 33",
    "text": "5. Keon Coleman, Buffalo Bills, Drafted No. 33\nTrading star wide receiver Stefon Diggs before the draft made the Bill’s intentions fairly clear. Keon Coleman has all the tools of a WR1. While his production did take a dip from his 2022-2023 after he transferred from Michigan State to Florida State, his 6-foot-4 frame makes him an excellent target for Josh Allen. There’s a void of pass-catching talent in Buffalo with the exception of tight end Dalton Kincaid. Coleman is worth a flyer to see if he can fill it."
  },
  {
    "objectID": "posts/predicting_2024s_most_valuable_fantasy_football_wide_receivers/index (1).html#marvin-harrison-jr.-arizona-cardinals-drafted-no.-4",
    "href": "posts/predicting_2024s_most_valuable_fantasy_football_wide_receivers/index (1).html#marvin-harrison-jr.-arizona-cardinals-drafted-no.-4",
    "title": "Calling your shot: Predicting the NFL’s most valuable fantasy wide receivers for 2024 using linear regression",
    "section": "6. Marvin Harrison Jr., Arizona Cardinals, Drafted No. 4",
    "text": "6. Marvin Harrison Jr., Arizona Cardinals, Drafted No. 4\nMarvin Harrison Jr. has been incredibly consistent over the last two seasons. He caught 14 touchdowns in 2022 and 2023 and totaled 1,263 yards two years ago before posting 1,211 yards last season. Throughout that time, he handled the pressure of his lineage and being the consensus top wide receiver in the country. His landing spot and the lack of production at quarterback without Kyler Murray is a large part of why he isn’t higher on this list."
  },
  {
    "objectID": "posts/predicting_2024s_most_valuable_fantasy_football_wide_receivers/index (1).html#rome-odunze-chicago-bears-drafted-no.-9",
    "href": "posts/predicting_2024s_most_valuable_fantasy_football_wide_receivers/index (1).html#rome-odunze-chicago-bears-drafted-no.-9",
    "title": "Calling your shot: Predicting the NFL’s most valuable fantasy wide receivers for 2024 using linear regression",
    "section": "7. Rome Odunze, Chicago Bears, Drafted No. 9",
    "text": "7. Rome Odunze, Chicago Bears, Drafted No. 9\nRome Odunze is going to a crowded wide receiver room in Chicago with Keenan Allen and DJ Moore. Plus, there are some questions about how Caleb Williams will translate to the NFL. Odunze still has plenty of talent to translate to this level where he doesn’t have to be the top dog. He posted 1,000-yard seasons in each of his last two collegiate campaigns."
  },
  {
    "objectID": "posts/predicting_2024s_most_valuable_fantasy_football_wide_receivers/index (1).html#ladd-mcconkey-los-angeles-chargers-drafted-no.-34",
    "href": "posts/predicting_2024s_most_valuable_fantasy_football_wide_receivers/index (1).html#ladd-mcconkey-los-angeles-chargers-drafted-no.-34",
    "title": "Calling your shot: Predicting the NFL’s most valuable fantasy wide receivers for 2024 using linear regression",
    "section": "8. Ladd McConkey, Los Angeles Chargers, Drafted No. 34",
    "text": "8. Ladd McConkey, Los Angeles Chargers, Drafted No. 34\nMcConkey is a member of the all-name team and will be one of Justin Herbert’s top targets in the Los Angeles Chargers first year under Jim Harbaugh. The 22-year-old wideout only caught 29 passes for 456 yards and two touchdowns last year, but played in just eight games. McConkey will battle with Quentin Johnston for the top spot in the rotation."
  },
  {
    "objectID": "posts/predicting_2024s_most_valuable_fantasy_football_wide_receivers/index (1).html#xavier-legette-carolina-panthers-drafted-no.-32",
    "href": "posts/predicting_2024s_most_valuable_fantasy_football_wide_receivers/index (1).html#xavier-legette-carolina-panthers-drafted-no.-32",
    "title": "Calling your shot: Predicting the NFL’s most valuable fantasy wide receivers for 2024 using linear regression",
    "section": "9. Xavier Legette, Carolina Panthers, Drafted No. 32",
    "text": "9. Xavier Legette, Carolina Panthers, Drafted No. 32\nXacier Legette is the hometown kid. He’s a native of Mullins, South Carolina, and attend South Carolina University. The Panthers traded up to get Legette with the final pick of the first round after he totaled 1,255 receiving yards on 71 catches with seven touchdowns. Of course, the red flag would be joining a Carolina squad that was the worst in the NFL last year and posted abysmal offensive numbers."
  },
  {
    "objectID": "posts/predicting_2024s_most_valuable_fantasy_football_wide_receivers/index (1).html#jalynn-polk-new-england-patriots-drafted-no.-37",
    "href": "posts/predicting_2024s_most_valuable_fantasy_football_wide_receivers/index (1).html#jalynn-polk-new-england-patriots-drafted-no.-37",
    "title": "Calling your shot: Predicting the NFL’s most valuable fantasy wide receivers for 2024 using linear regression",
    "section": "10. Ja’Lynn Polk, New England Patriots, Drafted No. 37",
    "text": "10. Ja’Lynn Polk, New England Patriots, Drafted No. 37\nIt’s a new era in New England and Ja’Lynn Polk will join quarterback Drake Maye in Jerod Mayo’s first draft class as head coach. He caught 69 passes for 1,159 yards and nine touchdowns. That’s in a room WITH Rome Odunze. The offensive history of the Patriots may be a reason to stay away, but Polk certainly has a solid chance to make an impact in 2024."
  },
  {
    "objectID": "posts/the-frost-first-drive-effect/index.html",
    "href": "posts/the-frost-first-drive-effect/index.html",
    "title": "The Frost First Drive Effect",
    "section": "",
    "text": "That’s a statement that likely every Husker fan who has followed the program closely in the last five years would agree with. Who could forget the first drive against Ohio State in 2018? Or the glorious four-play explosion of offense on the opening drive in the 2020 trip to Columbus that was punctuated by a Luke McCaffery 47 yard run? Or perhaps last week’s loss to Minnesota?\nAll of these instances have two things in common. Nebraska appeared to be invincible on script. Once the Huskers got off, they couldn’t sustain any momentum. They lost.\nSo is the first drive mayhem that was a major piece of the Scott Frost era real? Is it just a myth based in recency bias and dashed expectations?\nWell, the answer is somewhere in between.\n\n\nCode\nlibrary(tidyverse)\nlibrary(cfbfastR)\nlibrary(ggrepel)\nlibrary(ggalt)\n\ndrives22<-cfbd_drives(\n  2022,\n  season_type = \"regular\"\n) %>%  \n  mutate(season=2022)\n\ndrives18<-cfbd_drives(\n  2018,\n  season_type = \"regular\"\n)%>%  \n  mutate(season=2018)\n\ndrives19<-cfbd_drives(\n  2019,\n  season_type = \"regular\"\n)%>%  \n  mutate(season=2019)\n\ndrives20<-cfbd_drives(\n  2020,\n  season_type = \"regular\"\n)%>%  \n  mutate(season=2020)\n\ndrives21<-cfbd_drives(\n  2021,\n  season_type = \"regular\"\n)%>%  \n  mutate(season=2021)\n\ndrives<-bind_rows(\n  drives22, drives21, drives20, drives19, drives18\n)\n\nYearlySuccess<-drives %>% \n  filter(drive_number<=2) %>% \n  group_by(offense, season, scoring) %>% \n  summarize(count = n()) %>% \n  pivot_wider(names_from = scoring, values_from = count)%>% \n  replace(is.na(.), 0) %>% \n  mutate(GamesPlayed= `TRUE` + `FALSE`) %>% \n  group_by(offense, season) %>%  \n  summarize(\n  Score=sum(`TRUE`),\n  Total=sum(GamesPlayed)) %>%  \n  mutate(SuccessRate=Score/Total*100) %>% \n  filter(Total>5) %>% \n  arrange(desc(SuccessRate))\n\nnuplustop10<-YearlySuccess %>% \n  filter(offense==\"Nebraska\"|offense==\"Alabama\"|offense==\"Ohio State\"|offense==\"UCF\"|offense==\"Oklahoma\"|offense==\"North Carolina\"|offense==\"Georgia\"|offense==\"LSU\"|offense==\"UAB\"|offense==\"Air Force\"|offense==\"Oklahoma State\")\n\nnucolor<-nuplustop10 %>% filter(offense==\"Nebraska\")\n\nggplot()+\n  geom_line(data = nuplustop10, aes(x=season, y=SuccessRate, group=offense))+\n  geom_line(data = nucolor, aes(x=season, y=SuccessRate, group=offense), color=\"red\")+\n  facet_wrap(~offense)+\n  labs(title = \"Is Nebraska the best opening drive team of the last five years?\", subtitle = \"No, not even close. The Huskers rank No. 43 in the nation, well behind the country's top ten teams.\", y=\"Opening Drive Score %\", x=\"Season\", caption=\"Source: cfbfastR | By: Grant Hansen\")+\n  theme_minimal()+\n  theme(\n    plot.title = element_text(size = 16, face= \"bold\"),\n    axis.title = element_text(size=8),\n    plot.subtitle = element_text(size=11),\n    plot.title.position = \"plot\",\n    panel.grid.minor = element_blank(), \n    axis.text.x = element_text(size=7)\n  )\n\n\n\n\n\nLet’s begin by taking Nebraska’s opening drive score rate throughout the last five years. Any instance of points scored on a team’s first offensive drive counts as an opening drive score (ODS).\nThe Huskers are No. 43 in the country. Certainly not in the bottom half of the FBS, but not good either. Nebraska isn’t the opening drive juggernaut that they can at times seem to be. That’s especially true when compared to the top ten teams of the last five seasons.\nThere are plenty of programs in here that aren’t a surprise such as Alabama and Ohio State. UCF is particularly impressive because of the coaching turnover present in Orlando. It’s also blatantly obvious that LSU suffered a major drop-off from 2019 to 2020 (I wonder why that would be?).\nAll in all, the Huskers just aren’t special here despite a great 2018 for opening drive scores.\n\n\nCode\nRecords18<-cfbd_game_records(2018)\n\nRecords19<-cfbd_game_records(2019)\n\nRecords20<-cfbd_game_records(2020)\n\nRecords21<-cfbd_game_records(2021)\n\nRecords22<-cfbd_game_records(2022)\n\nFiveYearRecords<-bind_rows(Records18, Records19, Records20, Records21, Records22)\n\nFiveYearWinRate<-FiveYearRecords %>% \n  group_by(team) %>% \n  summarize(\n  Total=sum(total_games),\n  Wins=sum(total_wins)\n) %>% \n  mutate(WinPercentage=Wins/Total*100)\n\n\nFiveYearSuccessRate<-drives %>% \n  filter(drive_number<=2) %>% \n  group_by(offense, season, scoring) %>% \n  summarize(count = n()) %>% \n  pivot_wider(names_from = scoring, values_from = count) %>% \n  replace(is.na(.), 0) %>% \n  mutate(GamesPlayed= `TRUE` + `FALSE`) %>% \n  group_by(offense) %>% \n  summarize(\n  Score=sum(`TRUE`),\n  Total=sum(GamesPlayed)) %>%\n  mutate(SuccessRate=Score/Total) %>% \n  filter(Total>40) %>% \n  arrange(desc(SuccessRate))\n\nFiveYearTotals<-bind_rows(FiveYearWinRate, FiveYearSuccessRate)\n\nFiveYearTotals<-FiveYearWinRate %>% inner_join(FiveYearSuccessRate, by=c(\"team\"=\"offense\"))\n\nFiveYearNU<-FiveYearTotals %>% filter(team==\"Nebraska\"|team==\"Alabama\"|team==\"Ohio State\"|team==\"UCF\"|team==\"Oklahoma\"|team==\"North Carolina\"|team==\"Georgia\"|team==\"LSU\"|team==\"UAB\"|team==\"Air Force\"|team==\"Oklahoma State\"|team==\"San Diego State\"|team==\"Iowa\" |team==\"Akron\"| team==\"Michigan\"| team==\"Kansas\" |team==\"Georgia Southern\" | team==\"Northwestern\")\n\nnucolor<-FiveYearTotals %>% filter(team==\"Nebraska\")\n\nggplot()+\n  geom_point(data=FiveYearTotals, aes(x=WinPercentage, y=SuccessRate), color=\"grey\")+\n  geom_point(data=FiveYearNU, aes(x=WinPercentage, y=SuccessRate), color=\"black\")+\n  geom_point(data=nucolor, aes(x=WinPercentage, y=SuccessRate), color=\"#E41C38\")+\n  geom_smooth(data=FiveYearTotals, aes(x=WinPercentage, y=SuccessRate), method = \"lm\", se=FALSE)+\n    geom_text_repel(data=FiveYearNU, aes(x=WinPercentage, y=SuccessRate, label=team))+\n    labs(\n    x=\"Win % Since 2018\", \n    y=\"Opening Drive Score %\", \n    title=\"Nebraska fails to win despite a decent opening drive score rate\", \n    subtitle=\"Compared to other teams in the FBS, Nebraska is vastly underperforming.\", \n    caption=\"Source: cfbfastR | By: Grant Hansen\"\n    )+\n  theme_minimal()+\n    theme(\n    plot.title = element_text(size = 16, face= \"bold\"),\n    axis.title = element_text(size=10),\n    plot.subtitle = element_text(size=11),\n    plot.title.position = \"plot\",\n    panel.grid.minor = element_blank()\n  )\n\n\n\n\n\nLet’s check this metric against the most important stat in sports, win percentage.\nIt probably doesn’t come as a shock to many to see that Nebraska is underperforming here too. Using the fit line, one could predict that Nebraska should be winning roughly 70% of its games based on its ODS.\nIt’s difficult to say if scoring on a first drive is something that good teams do, or something that helps teams win with a higher frequency. The former seems much more likely in this scribe’s opinion. But with everything, there are always outliers.\nIowa and Michigan are great examples of teams that have struggled mightily on opening drives but continue to win at a high level. San Diego State and Georgia Southern are more extreme examples although they do play in an inferior conference.\nNebraska is on the opposite side of the chart to those programs. Not good.\n\n\nCode\ndrivesDB <- drives %>% \n  arrange(offense, game_id) %>% \n  group_by(offense, game_id) %>% \n  mutate(team_drive = row_number())\n\nopeningdrives <- drives %>% \n  filter(drive_number == 1 | drive_number == 2) %>% \n  filter(scoring == TRUE)\n\nod <- openingdrives %>% \n  select(game_id)\n\nDBDRIVESCHART<-drivesDB %>% \n  inner_join(od) %>% \n  filter(scoring == TRUE) %>% \n  mutate(whichscore = row_number()) %>%\n  filter(whichscore == 2) %>%\n  group_by(offense) %>% summarize(next_score = mean(team_drive)) %>% mutate(FirstDrive=1)\n\n\nJoining, by = \"game_id\"\n\n\nCode\nDBFiltered<-DBDRIVESCHART %>% \nfilter(offense==\"Nebraska\"|offense==\"Alabama\"|offense==\"Ohio State\"|offense==\"UCF\"|offense==\"Oklahoma\"|offense==\"North Carolina\"|offense==\"Georgia\"|offense==\"LSU\"|offense==\"UAB\"|offense==\"Air Force\"|offense==\"Oklahoma State\"|offense==\"San Diego State\"|offense==\"Iowa\" |offense==\"Akron\"| offense==\"Michigan\"| offense==\"Kansas\" |offense==\"Georgia Southern\" | offense==\"Northwestern\")\n\nnuDB<-DBDRIVESCHART %>% filter(offense==\"Nebraska\")\n\niwDB<-DBDRIVESCHART %>% filter(offense==\"Iowa\")\n\nmiDB<-DBDRIVESCHART %>% filter(offense==\"Michigan\")\n\ngsDB<-DBDRIVESCHART %>% filter(offense==\"Georgia Southern\")\n\nggplot()+\n  geom_dumbbell(\n    data = DBFiltered,\n    aes(y=reorder(offense, next_score), x=FirstDrive, xend=next_score),\n    size= 2,\n    color=\" dark grey\"\n  )+\n    geom_dumbbell(\n    data = nuDB,\n    aes(y=reorder(offense, next_score), x=FirstDrive, xend=next_score),\n    size= 2,\n    color=\"#E41C38\"\n  )+\n   geom_dumbbell(\n    data = iwDB,\n    aes(y=reorder(offense, next_score), x=FirstDrive, xend=next_score),\n    size= 2,\n    color=\"#FFCD00\"\n  )+\n     geom_dumbbell(\n    data = miDB,\n    aes(y=reorder(offense, next_score), x=FirstDrive, xend=next_score),\n    size= 2,\n    color=\"#00274C\"\n  )+\n       geom_dumbbell(\n    data = gsDB,\n    aes(y=reorder(offense, next_score), x=FirstDrive, xend=next_score),\n    size= 2,\n    color=\"#87714D\"\n  )+\n   labs(\n    x=\"Average Drives Unitl Second Score\", \n    y=\"\", \n    title=\"If Nebraska manages to score on its first drive...\", \n    subtitle=\"The Huskers take a signficant amount of possesions to score again. Even longer than teams\\n with worse opening drive success rates such as Iowa, Georgia Southern and Michigan.\", \n    caption=\"Source: cfbfastR | By: Grant Hansen\")+\n  theme_minimal()+\n      theme(\n    plot.title = element_text(size = 18, face= \"bold\"),\n    axis.title = element_text(size=10),\n    plot.subtitle = element_text(size=10),\n    plot.title.position = \"plot\",\n    panel.grid.minor = element_blank())\n\n\n\n\n\nLet’s take a measurement of Nebraska’s opening drive hangover.\nIt’s coming. Everyone in Memorial Stadium can sense it each week. They’ve been conditioned.\nOnce Nebraska scores, it takes the Huskers on average 4.3 drives to score again. Adjustment from the script that is practiced throughout the week to the regular course of the game is…difficult. There are three teams that have a worse ODS than Nebraska, but are much more capable of scoring again after a first-drive score. Those teams are Iowa, Michigan and Georgia Southern.\nSo, is the Frost Era First Drive Effect real?\nThe answer is, yes. Mostly. Nebraska isn’t the best in the country on opening drives but the crash that follows the good openers is very very real.\nBy far, Nebraska has scored a touchdown on their opening drive more than any other outcome in the last five seasons. The Huskers have had no issue scoring on the first drive either. That’s great.\nThe two most damning numbers are the difference between Nebraska’s ODS and the fit line, and that it takes Nebraska over four drives (almost a quarter) to score again.\nIt’s indicative of the failures brought to bear by the Husker coaching staff in the last few years. Failures to support the team off script and failure to adjust."
  },
  {
    "objectID": "posts/whipples-world-analyzing-nebraskas-2022-playcalling/index.html",
    "href": "posts/whipples-world-analyzing-nebraskas-2022-playcalling/index.html",
    "title": "Whipple’s World: Analyzing Nebraska’s 2022 Playcalling",
    "section": "",
    "text": "Would embattled head coach Scott Frost stay out of new OC Mark Whipple’s way? Could the old Jedi master rehabilitate a Nebraska legend who had lost his way? Were Pitt head coach Pat Narduzzi’s preseason comments on Whipple rash, or perhaps, the truth? Was chaos or rash success in store?\nWell before long many of those questions were answered. Frost lost his last legs after a loss to Sun Belt foe Georgia Southern. All questions regarding his hand in the offense ceased to retain relevance.\nThe rest of the season was a wild roller coaster for those who remained on Nebraska’s staff. Whipple’s offense produced outstanding showings against foes like Purdue but looked totally lost without quarterback Casey Thompson. In the two and a half games the 24-year-old missed, the offense was putrid.\nPlay calling questions began to arise. With the season in the books, let’s answer some of them.\n\n\nCode\nlibrary(cfbfastR)\nlibrary(tidyverse)\nlibrary(ggrepel)\nlibrary(ggalt)\nlibrary(waffle)\n\nplays <- load_cfb_pbp(2022)\n\nfumbles<-plays %>% filter(offense_play == \"Nebraska\", grepl(\"Fumble\", play_type)) \n\nnebraskaplays<-plays %>% \n  filter(offense_play == \"Nebraska\") %>%\n  mutate(\n    run_pass = case_when(\n      grepl(\"Pass\", play_type) == TRUE ~ \"Pass\",\n      play_type == \"Sack\" ~ \"Pass\",\n      grepl(\"Interception\", play_type) == TRUE ~ \"Pass\",\n      grepl(\"Rush\", play_type) == TRUE ~ \"Run\",\n      TRUE ~ \"Other\"\n    )) %>% group_by(run_pass) %>%\n  tally()\n\nwhipthirdshort<-plays %>% \n  filter(offense_play == \"Nebraska\", down == \"3\" | down==\"4\", distance< 4 ) %>%\n  mutate(\n    run_pass = case_when(\n      grepl(\"Pass\", play_type) == TRUE ~ \"Pass\",\n      play_type == \"Sack\" ~ \"Pass\",\n      grepl(\"Interception\", play_type) == TRUE ~ \"Pass\",\n      grepl(\"Rush\", play_type) == TRUE ~ \"Run\",\n      TRUE ~ \"Other\"\n    )) %>% group_by(run_pass) %>%\n  tally()\n\n\nnulateshort<-c(\"Rushing Plays\"=62, \"Passing Plays\"= 38.3)\n\nnurunpass<-c(\"Rushing Plays\"=51.07, \"Passing Plays\"=48.9)\n\niron(\nwaffle(\n  nurunpass,\n  rows = 5,\n  colors = c(\"red\", \"black\")) +\n  labs(\n    x= \"1 square= 1%\",\n    title = \"Whipple's playcalling was squarley middle of the road\",\n    subtitle = \"Nebraska has ran the football 51% of the time this season.\") +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 10),\n    axis.title.y = element_blank()\n  ),\n\nwaffle(\n  nulateshort,\n  rows = 5,\n  colors= c(\"red\", \"black\")) +\n    labs(\n    x= \"1 square= 1%\",\n   title = \"Whipple ran it more on short, key downs\",\n    subtitle = \"The ratio further favors the rushing attack on third or fourth down and less than four (62%).\",\n      caption=\"Source: cfbfastR | Graphic by Grant Hansen\") +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 10),\n    axis.title.y = element_blank()\n))\n\n\n\n\n\nWell it appears Whipple wasn’t some crazy, stubborn old kook with a play sheet.\nHe did dedicate some serious attention to the run game. Including fumbles, Nebraska ran the ball 51% of the time this last season. In short yardage situations, they continued to run the ball. There clearly was a focus applied to the rushing attack and the OC wasn’t as big of a “Bomb the Ball” guy as many thought.\nLet’s compare him to the rest of the Big Ten.\n\n\nCode\nBigTenRatio<-plays %>% \n  filter(offense_conference == \"Big Ten\") %>%\n  mutate(\n    run_pass = case_when(\n      grepl(\"Pass\", play_type) == TRUE ~ \"Pass\",\n      play_type == \"Sack\" ~ \"Pass\",\n      grepl(\"Interception\", play_type) == TRUE ~ \"Pass\",\n      grepl(\"Rush\", play_type) == TRUE ~ \"Run\",\n      TRUE ~ \"Other\"\n    )) %>% group_by(run_pass) %>%\n  tally()\n\nbigrunpass<-c(\"Rushing Plays\"= 51.6, \"Passing Plays\" = 48.3)\n\nbigthirdshort<-plays %>% \n  filter(offense_conference == \"Big Ten\", down == \"3\" | down==\"4\", distance< 4 ) %>%\n  mutate(\n    run_pass = case_when(\n      grepl(\"Pass\", play_type) == TRUE ~ \"Pass\",\n      play_type == \"Sack\" ~ \"Pass\",\n      grepl(\"Interception\", play_type) == TRUE ~ \"Pass\",\n      grepl(\"Rush\", play_type) == TRUE ~ \"Run\",\n      TRUE ~ \"Other\"\n    )) %>% group_by(run_pass) %>%\n  tally()\n\nbiglateshort<- c(\"Rushing Plays\"= 72.4, \"Passing Plays\" = 27.5)\n\niron(\nwaffle(\n  bigrunpass,\n  rows = 5,\n  colors = c(\"blue\", \"grey\")) +\n  labs(\n    x= \"1 square= 1%\",\n    title = \"The Big Ten also found itself in balence\",\n    subtitle = \"Whipple is spot on with the rest of his Big Ten collegues (51% run).\") +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 10),\n    axis.title.y = element_blank()\n  ),\n\nwaffle(\n  biglateshort,\n  rows = 5,\n  colors= c(\"blue\", \"grey\")) +\n    labs(\n    x= \"1 square= 1%\",\n   title = \"The Big Ten keeps it conservative on key downs\",\n    subtitle = \"This is where Whipple breaks from the crowd. The rest of the conference\\n runs it here nearly 75% of the time.\",\n      caption=\"Source: cfbfastR | Graphic by Grant Hansen\") +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 10),\n    axis.title.y = element_blank()\n))\n\n\n\n\n\nTurns out, Whipple is spot on with the rest of the conference in overall play calling.\nHowever, he did throw the ball nearly 10% more in short yardage situations. That’s one gripe many Whipple critics can fairly hold.\n\n\nCode\nnuweektoweek<-plays %>% \n  filter(offense_play == \"Nebraska\") %>% \n  mutate(\n    run_pass = case_when(\n      grepl(\"Pass\", play_type) == TRUE ~ \"Pass\",\n      play_type == \"Sack\" ~ \"Pass\",\n      grepl(\"Interception\", play_type) == TRUE ~ \"Pass\",\n      grepl(\"Rush\", play_type) == TRUE ~ \"Run\",\n      TRUE ~ \"Other\",\n    )) %>% group_by(week, run_pass, def_pos_team) %>% filter(run_pass != \"Other\")%>%  mutate(week = case_when(\n    def_pos_team == \"Northwestern\" ~ 0,\n    TRUE ~ as.numeric(week)\n  )) %>% \n  tally() \n\nggplot()+\n  geom_bar(data = nuweektoweek, aes(x=reorder(def_pos_team, week), weight=n, fill=run_pass)) +\n  scale_fill_manual(values = c(\"black\", \"red\"), name= \"Play Type\")+\n    labs(\n    x=\"\", \n    y=\"Total Plays\", \n    title=\"Nebraska was balanced almost all season\", \n    subtitle=\"Scott Frost was fired following the loss to Georgia Southern. But, there is little to no change\\n in the run-pass ratio once Frost is off the board.\", \n    caption=\"Source: cfbfastR | By: Grant Hansen\") +\n    theme_minimal()+\n      theme(\n    plot.title = element_text(size = 18, face= \"bold\"),\n    axis.title = element_text(size=10),\n    plot.subtitle = element_text(size=10),\n    plot.title.position = \"plot\",\n    panel.grid.minor = element_blank())+\n  coord_flip()\n\n\n\n\n\nLet’s answer another question. Did Frost have an undue hand in the offense?\nOne game certainly would tell you yes. The Huskers pounded the run game against North Dakota State. Anyone who watched that game could tell you Nebraska made a concerted effort to run the ball in the second half. In fact, it’s about the most NU ran the ball all year.\nFrost/Whipple ran the ball a ton against Georgia Southern in the next week, too. Still, the play calling was close to balanced.\nAfter Frost was canned, Nebraska’s play calling didn’t really change. Whipple kept it even Steven throughout the final nine games.\nThe evidence that Frost meddled in the offense is relatively slim. Really, there’s enough to say he did in one game. The sample is just too small outside of that primary example.\n\n\nCode\nmetrics<-cfbd_metrics_ppa_teams(2022) %>% \n  filter(conference==\"Big Ten\") %>% \n  mutate(gap=as.numeric(off_passing)-as.numeric(off_rushing))\n\nggplot() +\n  geom_dumbbell(\n    data = metrics,\n    aes(y=reorder(team, (gap)), x=as.numeric(off_rushing), xend=as.numeric(off_passing)), \n    size= 2.5,\n    color=\"grey\",\n    colour_x=\"red\",\n    colour_xend= \"black\") +  \n    labs(\n    x=\"Projected Points Added\", \n    y=\"\", \n    title=\"Nebraska's run-pass ratio was balanced,\\n its offensive efficency wasn't\", \n    subtitle=\"Red dots equal projected points added from rushing plays. Black dots represent passing plays.\", \n    caption=\"Source: cfbfastR | By: Grant Hansen\")+\n  theme_minimal()+\n      theme(\n    plot.title = element_text(size = 18, face= \"bold\"),\n    axis.title = element_text(size=10),\n    plot.subtitle = element_text(size=10),\n    plot.title.position = \"plot\",\n    panel.grid.minor = element_blank())\n\n\n\n\n\nOkay so Whips called plenty of run plays. But how productive were they?\nHere is a win for “Bomb the Ball” guy. Nebraska was extremely inefficient when it decided to run the ball. That’s especially true when one compares that to passing efficiency.\nWe will use a stat here called Predicted Points Added (PPA), which measures the output of expected points added per play.\nThe Huskers had the second biggest gap in efficiency in the Big Ten behind Ohio State. The Buckeyes were way more successful in both rush and pass opportunities.\nNebraska could not run the ball well to save its life. So while the Huskers tried many times to get the run game to work, they failed miserably. It’s normal to have a higher PPA passing stat compared to rushing. A gap of that size is a problem.\nNebraska’s offense in 2022 was constantly on the struggle bus. But, it had much more to do with the coaching inside the practice facility than the play calling on Saturdays."
  },
  {
    "objectID": "Whipple Offense Project.html",
    "href": "Whipple Offense Project.html",
    "title": "Hansen's Data Dive",
    "section": "",
    "text": "plays <- load_cfb_pbp(2022)\n\n\nfumbles<-plays %>% filter(offense_play == \"Nebraska\", grepl(\"Fumble\", play_type)) \n\nNebraska has had 9 fumbles this season.\nPass Plays: 5 Run Plays: 4\n\nplays %>% \n  filter(offense_play == \"Nebraska\") %>%\n  mutate(\n    run_pass = case_when(\n      grepl(\"Pass\", play_type) == TRUE ~ \"Pass\",\n      play_type == \"Sack\" ~ \"Pass\",\n      grepl(\"Interception\", play_type) == TRUE ~ \"Pass\",\n      grepl(\"Rush\", play_type) == TRUE ~ \"Run\",\n      TRUE ~ \"Other\"\n    )) %>% group_by(run_pass) %>%\n  tally()\n\n# A tibble: 3 × 2\n  run_pass     n\n  <chr>    <int>\n1 Other      280\n2 Pass       362\n3 Run        379\n\n\n\nwhipthirdshort<-plays %>% \n  filter(offense_play == \"Nebraska\", down == \"3\" | down==\"4\", distance< 4 ) %>%\n  mutate(\n    run_pass = case_when(\n      grepl(\"Pass\", play_type) == TRUE ~ \"Pass\",\n      play_type == \"Sack\" ~ \"Pass\",\n      grepl(\"Interception\", play_type) == TRUE ~ \"Pass\",\n      grepl(\"Rush\", play_type) == TRUE ~ \"Run\",\n      TRUE ~ \"Other\"\n    )) %>% group_by(run_pass) %>%\n  tally()\n\n\nhead(whipthirdshort)\n\n# A tibble: 3 × 2\n  run_pass     n\n  <chr>    <int>\n1 Other       27\n2 Pass        19\n3 Run         31\n\n\nOne of Nebraska’s fumbles occurred on third and short.\n\nnulateshort<-c(\"Rushing Plays\"=62, \"Passing Plays\"= 38.3)\n\n\nnurunpass<-c(\"Rushing Plays\"=51.07, \"Passing Plays\"=48.9)\n\n\niron(\nwaffle(\n  nurunpass,\n  rows = 5,\n  colors = c(\"red\", \"black\")) +\n  labs(\n    x= \"1 square= 1%\",\n    title = \"The Whipple Run-Pass Ratio\",\n    subtitle = \"Nebraska has ran the football 51% of the time this season.\") +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 10),\n    axis.title.y = element_blank()\n  ),\n\nwaffle(\n  nulateshort,\n  rows = 5,\n  colors= c(\"red\", \"black\")) +\n    labs(\n    x= \"1 square= 1%\",\n   title = \"Whipple on third/fourth down and less than four\",\n    subtitle = \"The ratio further favors the run on short, key downs (62%).\",\n      caption=\"Source: cfbfastR | Graphic by Grant Hansen\") +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 10),\n    axis.title.y = element_blank()\n))\n\n\n\n\nNext let’s make the Big Ten waffle iron.\n\nBigTenRatio<-plays %>% \n  filter(offense_conference == \"Big Ten\") %>%\n  mutate(\n    run_pass = case_when(\n      grepl(\"Pass\", play_type) == TRUE ~ \"Pass\",\n      play_type == \"Sack\" ~ \"Pass\",\n      grepl(\"Interception\", play_type) == TRUE ~ \"Pass\",\n      grepl(\"Rush\", play_type) == TRUE ~ \"Run\",\n      TRUE ~ \"Other\"\n    )) %>% group_by(run_pass) %>%\n  tally()\n\n\nhead(BigTenRatio)\n\n# A tibble: 3 × 2\n  run_pass     n\n  <chr>    <int>\n1 Other     3755\n2 Pass      5287\n3 Run       5639\n\n\nNow I need to subtract Nebraska’s plays. 363 pass, 379 run (742 total) Counting fumbles. 10,186 total plays subtracting Nebraska’s.\n\nbigrunpass<-c(\"Rushing Plays\"= 51.6, \"Passing Plays\" = 48.3)\n\n\nbigthirdshort<-plays %>% \n  filter(offense_conference == \"Big Ten\", down == \"3\" | down==\"4\", distance< 4 ) %>%\n  mutate(\n    run_pass = case_when(\n      grepl(\"Pass\", play_type) == TRUE ~ \"Pass\",\n      play_type == \"Sack\" ~ \"Pass\",\n      grepl(\"Interception\", play_type) == TRUE ~ \"Pass\",\n      grepl(\"Rush\", play_type) == TRUE ~ \"Run\",\n      TRUE ~ \"Other\"\n    )) %>% group_by(run_pass) %>%\n  tally()\n\n\nhead(bigthirdshort)\n\n# A tibble: 3 × 2\n  run_pass     n\n  <chr>    <int>\n1 Other      360\n2 Pass       234\n3 Run        592\n\n\nNebraska 19 pass, 31 run. 774 total B10 plays without Nebraska.\n\nbiglateshort<- c(\"Rushing Plays\"= 72.4, \"Passing Plays\" = 27.5)\n\n\niron(\nwaffle(\n  bigrunpass,\n  rows = 5,\n  colors = c(\"blue\", \"grey\")) +\n  labs(\n    x= \"1 square= 1%\",\n    title = \"The Big Ten Run-Pass Ratio\",\n    subtitle = \"Whipple is spot on with the rest of his Big Ten collegues.\") +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 10),\n    axis.title.y = element_blank()\n  ),\n\nwaffle(\n  biglateshort,\n  rows = 5,\n  colors= c(\"blue\", \"grey\")) +\n    labs(\n    x= \"1 square= 1%\",\n   title = \"The Big Ten on third or fourth down and less than four\",\n    subtitle = \"This is where Whipple breaks from the crowd. The rest of the conference\\n runs it here nearly 75% of the time.\",\n      caption=\"Source: cfbfastR | Graphic by Grant Hansen\") +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 10),\n    axis.title.y = element_blank()\n))\n\n\n\n\nTime to make a stacked bar chart showing Nebraska’s Run-Pass Ratio week by week.\n\nnuweektoweek<-plays %>% \n  filter(offense_play == \"Nebraska\") %>% \n  mutate(\n    run_pass = case_when(\n      grepl(\"Pass\", play_type) == TRUE ~ \"Pass\",\n      play_type == \"Sack\" ~ \"Pass\",\n      grepl(\"Interception\", play_type) == TRUE ~ \"Pass\",\n      grepl(\"Rush\", play_type) == TRUE ~ \"Run\",\n      TRUE ~ \"Other\",\n    )) %>% group_by(week, run_pass, def_pos_team) %>% filter(run_pass != \"Other\")%>%  mutate(week = case_when(\n    def_pos_team == \"Northwestern\" ~ 0,\n    TRUE ~ as.numeric(week)\n  )) %>% \n  tally() \n\n\nhead(nuweektoweek)\n\n# A tibble: 6 × 4\n# Groups:   week, run_pass [6]\n   week run_pass def_pos_team         n\n  <dbl> <chr>    <chr>            <int>\n1     0 Pass     Northwestern        43\n2     0 Run      Northwestern        29\n3     1 Pass     North Dakota        22\n4     1 Run      North Dakota        37\n5     2 Pass     Georgia Southern    36\n6     2 Run      Georgia Southern    45\n\n\n\nggplot()+\n  geom_bar(data = nuweektoweek, aes(x=reorder(def_pos_team, week), weight=n, fill=run_pass)) +\n  scale_fill_manual(values = c(\"black\", \"red\"), name= \"Play Type\")+\n    labs(\n    x=\"\", \n    y=\"Total Plays\", \n    title=\"Nebraska was balanced almost all season\", \n    subtitle=\"Scott Frost was fired following the loss to Georgia Southern. But, there is little to no change\\n in the run-pass ratio once Frost is off the board.\", \n    caption=\"Source: cfbfastR | By: Grant Hansen\") +\n    theme_minimal()+\n      theme(\n    plot.title = element_text(size = 18, face= \"bold\"),\n    axis.title = element_text(size=10),\n    plot.subtitle = element_text(size=10),\n    plot.title.position = \"plot\",\n    panel.grid.minor = element_blank())+\n  coord_flip()\n\n\n\n\n\nmetrics<-cfbd_metrics_ppa_teams(2022) %>% \n  filter(conference==\"Big Ten\") %>% \n  mutate(gap=as.numeric(off_passing)-as.numeric(off_rushing))\n\nProjected points added dumbbell chart.\n\nggplot() +\n  geom_dumbbell(\n    data = metrics,\n    aes(y=reorder(team, (gap)), x=as.numeric(off_rushing), xend=as.numeric(off_passing)), \n    size= 2.5,\n    color=\"grey\",\n    colour_x=\"red\",\n    colour_xend= \"black\") +  \n    labs(\n    x=\"Projected Points Added\", \n    y=\"\", \n    title=\"Nebraska's run-pass ratio was balanced,\\n its offensive efficency wasn't\", \n    subtitle=\"Red dots equal projected points added from rushing plays. Black dots represent passing plays.\", \n    caption=\"Source: cfbfastR | By: Grant Hansen\")+\n  theme_minimal()+\n      theme(\n    plot.title = element_text(size = 18, face= \"bold\"),\n    axis.title = element_text(size=10),\n    plot.subtitle = element_text(size=10),\n    plot.title.position = \"plot\",\n    panel.grid.minor = element_blank())"
  }
]